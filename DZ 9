// Задача 64: Задайте значения N. Напишите программу, которая выведет все натуральные числа в промежутке от N до 1.
 // N = 5. -> "5, 4, 3, 2, 1"
 // N = 8. -> "8, 7, 6, 5, 4, 3, 2, 1"
 
 
Console.Write("Введите число: ");
int number = Convert.ToInt32(Console.ReadLine());
int count = 1;
NaturalToLow(number, count);


void NaturalToLow(int n, int count)
{
    if (count > n)
    {
        return;
    }
    else
    {
 NaturalToLow(n, count + 1);
 Console.Write(count + " ");
    }
}

// Задача 66. Задайте значение M и N. Напишите программу , которая найдет сумму натуральных элементов в промежутке
// от M до N. Выполнить с помощью рекурсии
// M = 1; N = 15 -> 120
// M = 4; N = 8-> 30
Console.Write(«Введите значение M: «);
int m = Convert.ToInt32(Console.ReadLine());
Console.Write(«Введите значение N: «);
int n = Convert.ToInt32(Console.ReadLine());
void che(int m, int n)
{
if (m > n)
return;
if (m % 2 == 0)
{
Console.Write($»{m}, «);
}
che(m+1,n);

}
che(m,n);


// Задача 68: Напишите программу вычисления функции Аккермана с помощью рекурсии. 
// Даны два неотрицательных числа m и n.
// m = 2, n = 3 -> A(m,n) = 9
// m = 3, n = 2 -> A(m,n) = 29

int m = InputNumbers("Введите m: ");
int n = InputNumbers("Введите n: ");

int functionAkkerman = Ack(m, n);

Console.Write($"Функция Аккермана = {functionAkkerman} ");

int Ack(int m, int n)
{
  if (m == 0) return n + 1;
  else if (n == 0) return Ack(m - 1, 1);
  else return Ack(m - 1, Ack(m, n - 1));
}

int InputNumbers(string input) 
{
  Console.Write(input);
  int output = Convert.ToInt32(Console.ReadLine());
  return output;
}
